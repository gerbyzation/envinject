name: Release
on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v1
        with:
          go-version: 1.13.x
      - run: go mod download
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true
      - name: build darwin/amd64
        run: |
          go build -o $output_name
          tar cvfz $output-name.tar.gz $output_name
          ls
        env:
          GOOS: darwin
          GOARCH: "amd64"
          output_name: envinject.darwin-amd64
      - name: build linux/amd64
        run: |
          go build -o $output_name
          tar cvfz $output-name.tar.gz $output_name
          ls
        env:
          GOOS: linux
          GOARCH: amd64
          output_name: envinject.linux-amd64
      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./envinject.linux-amd64.tar.gz
          asset_name: envinject.linux-amd64.tar.gz
          asset_content_type: application/gzip
      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./envinject.darwin-amd64.tar.gz
          asset_name: envinject.darwin-amd64.tar.gz
          asset_content_type: application/gzip
